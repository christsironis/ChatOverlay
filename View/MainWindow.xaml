<Window x:Class="ChatOverlay.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:local="clr-namespace:ChatOverlay" 
        xmlns:wpf="clr-namespace:CefSharp.Wpf;assembly=CefSharp.Wpf"
        mc:Ignorable="d"
        MouseDown="Window_MouseDown"
        Background="Transparent"
        Topmost="False"
        WindowStyle="None"
        AllowsTransparency="True"
        ResizeMode="CanResizeWithGrip"  
        KeyDown="Window_f9_KeyDown"
        Title="ChatOverlay" Height="600" Width="400" MinWidth="200" MinHeight="200">
    <Window.Resources>
        <Style TargetType="Button" x:Key="close">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers >
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Red"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Button" x:Key="button">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers >
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#3b3b3b"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- SubmenuItem -->

        <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
            <Border Name="Border">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="20" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                        <ColumnDefinition Width="20" />
                    </Grid.ColumnDefinitions>
                    <Border Name="Check" Width="13" Height="13" Visibility="Collapsed" Margin="6,0,6,0" Background="White" BorderThickness="1" BorderBrush="Black">
                        <Path Name="CheckMark" Width="7" Height="7" Visibility="Hidden" SnapsToDevicePixels="False" Stroke="LightBlue" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                    </Border>
                    <ContentPresenter Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True" />
                    <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="5,2,0,2" DockPanel.Dock="Right" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="LightBlue" />
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- SubmenuHeader -->

        <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
            <Border Name="Border">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="20"  />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="20" />
                    </Grid.ColumnDefinitions>

                    <ContentPresenter Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True" />
                    <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="5,2,2,2" DockPanel.Dock="Right" />
                    <Path Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 0 7 L 4 3.5 Z" Fill="Black" />
                    <Popup Name="Popup" Placement="Right" HorizontalOffset="-4" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                        <Border Name="SubmenuBorder" SnapsToDevicePixels="True" Background="White" BorderBrush="#0f3c5a" BorderThickness="1">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                    </Popup>
                </Grid>
            </Border>

            <ControlTemplate.Triggers>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter TargetName="Border" Property="Background" Value="LightBlue" />
                </Trigger>
                <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                    <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4" />
                    <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3" />
                </Trigger>
                <Trigger Property="IsEnabled"  Value="false">
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


        <Style TargetType="{x:Type ContextMenu}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Grid.IsSharedSizeScope" Value="true" />
            <Setter Property="HasDropShadow" Value="True" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border x:Name="Border" Background="White" BorderThickness="1">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="Black" />
                            </Border.BorderBrush>
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasDropShadow" Value="true">
                                <Setter TargetName="Border" Property="Padding" Value="0,3,0,3" />
                                <Setter TargetName="Border" Property="CornerRadius" Value="4" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  System Tray Menu  -->
        <Style x:Key="contextMenuTheme" TargetType="{x:Type ContextMenu}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Grid.IsSharedSizeScope" Value="true" />
            <Setter Property="HasDropShadow" Value="True" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border x:Name="Border" Background="White" BorderThickness="1">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="Black" />
                            </Border.BorderBrush>
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasDropShadow" Value="true">
                                <Setter TargetName="Border" Property="Padding" Value="5" />
                                <Setter TargetName="Border" Property="CornerRadius" Value="4" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  System Tray MenuItem  -->
        <Style x:Key="menuItemTheme" TargetType="{x:Type MenuItem}">
            <Setter Property="Background" Value="White" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="5"/>
        </Style>

        <ContextMenu Background="White" x:Key="contextMenu">
            <MenuItem Header="Toggle Borders (F9)" Click="toggleBorders_Click" />
            <MenuItem Header="New Window" Click="NewWindow_Click" />
            <MenuItem Header="Zoom Level">
                <MenuItem Header="+ Zoom In" Click="ZoomIn_Click" StaysOpenOnClick="True" />
                <MenuItem Header="- Zoom Out" Click="ZoomOut_Click"  StaysOpenOnClick="True" />
                <MenuItem Header="Reset" Click="ZoomReset_Click"/>
            </MenuItem>
            <MenuItem Header="Opacity Level">
                <MenuItem Header="+ Increase" Click="OpacityMore_Click" StaysOpenOnClick="True" />
                <MenuItem Header="- Decrease" Click="OpacityLess_Click" StaysOpenOnClick="True" />
                <MenuItem Header="Reset" Click="OpacityReset_Click" />
            </MenuItem>
        </ContextMenu>

    </Window.Resources>

    <Border ContextMenu="{StaticResource contextMenu}" CornerRadius="5,5,0,0" BorderThickness="0,10,0,0" BorderBrush="Transparent" Background="Transparent" >
        <Grid x:Name="main" Background="Transparent" >
            <Grid.RowDefinitions>
                <RowDefinition Height="32.767" />
                <RowDefinition Height="31.233"/>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <tb:TaskbarIcon Name="taskbarIcon" IconSource="/Icons/chat.ico" ToolTipText="{Binding ElementName=Browser, Path=Address}" TrayMouseDoubleClick="Show_Window">
                <!-- Set a simple context menu  -->
                <tb:TaskbarIcon.ContextMenu>
                    <ContextMenu Style="{StaticResource contextMenuTheme}" Background="White" x:Name="trayMenu">
                        <MenuItem Style="{StaticResource menuItemTheme}" Header="Hide/Show Border (F9)" Click="toggleBorders_Click" />
                        <MenuItem Style="{StaticResource menuItemTheme}" Header="Settings" Click="settings_Click" />
                        <MenuItem Style="{StaticResource menuItemTheme}" Header="Reset Window" Click="ResetWindow_Click" />
                        <Separator />
                        <MenuItem Style="{StaticResource menuItemTheme}" Header="Exit" Click="close_Click" />
                    </ContextMenu>
                </tb:TaskbarIcon.ContextMenu>
            </tb:TaskbarIcon>

            <Border Name="border" Background="Black" BorderBrush="Black" BorderThickness="2"  Grid.Row="0" Grid.RowSpan="2">

                <Grid x:Name="menuLine" Margin="0,0,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="30"></RowDefinition>
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="40" />
                            <ColumnDefinition Width="40" />
                            <ColumnDefinition Width="40" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="40" />
                            <ColumnDefinition Width="40" />
                            <ColumnDefinition Width="40" />
                            <ColumnDefinition Width="40" />
                        </Grid.ColumnDefinitions>

                        <Button x:Name="settings"     Grid.Column="0" Click="settings_Click" Style="{StaticResource button}"  ToolTip="Settings" >⚙</Button>
                        <Button x:Name="opacityless"  Grid.Column="1" Click="OpacityLess_Click" Style="{StaticResource button}" ToolTip="Reduce Opacity">-</Button>
                        <Button x:Name="opacitymore"  Grid.Column="2" Click="OpacityMore_Click" Style="{StaticResource button}" ToolTip="Increase Opacity">+</Button>
                        <Button x:Name="borders"      Grid.Column="4" Click="toggleBorders_Click" Style="{StaticResource button}" ToolTip="Toggle Borders">※</Button>
                        <Button x:Name="minimize"     Grid.Column="5" Click="minimize_Click" Style="{StaticResource button}" ToolTip="Minimize" >_</Button>
                        <Button x:Name="restore"      Grid.Column="6" Click="restore_Click" Style="{StaticResource button}" ToolTip="Maximize">[ ]</Button>
                        <Button x:Name="close"        Grid.Column="7" Click="close_Click" Style="{StaticResource close}" ToolTip="Close">⨉</Button>
                    </Grid>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6*" />
                            <ColumnDefinition Width="40" />
                            <ColumnDefinition Width="40" />
                        </Grid.ColumnDefinitions>

                        <TextBox x:Name="url"     Grid.Column="0" Text="{Binding ElementName=Browser, Path=Address, Mode=TwoWay}" KeyDown="url_KeyDown" VerticalContentAlignment="Center"/>
                        <Button x:Name="back"     Grid.Column="1" Click="back_Click" Style="{StaticResource button}">↩</Button>
                        <Button x:Name="forward"  Grid.Column="2" Click="forward_Click" Style="{StaticResource button}">↪</Button>
                    </Grid>

                </Grid>
            </Border>
            <wpf:ChromiumWebBrowser Grid.Row="2" x:Name="Browser" ZoomLevelIncrement="1" Address="https://www.twitch.tv/popout/elajjaz/chat?popout=" FrameLoadEnd="Browser_FrameLoadEnd"  AddressChanged="Browser_AddressChanged">
            </wpf:ChromiumWebBrowser>
        </Grid>
    </Border>
</Window>